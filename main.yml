- name: Fedora setup
  hosts: all

  vars_files:
    - user.yml

  vars_prompt:
    - name: onepassword_master_password
      prompt: Enter 1Password master password
      private: true
      confirm: true

  tasks:
    - name: Get Systemd default target
      ansible.builtin.command: 'systemctl get-default'
      register: systemd_get_default_target
      changed_when: false

    - name: Set Systemd default target to graphical
      ansible.builtin.command: 'systemctl set-default graphical.target'
      register: systemd_set_default_target
      when: "'graphical.target' not in systemd_get_default_target.stdout"
      changed_when: "'graphical.target' in systemd_set_default_target.stdout"
      become: true

    - name: Configure dnf
      community.general.ini_file:
        path: /etc/dnf/dnf.conf
        section: main
        option: max_parallel_downloads
        value: 10
        no_extra_spaces: true
        state: present
      become: true

    - name: Update system
      ansible.builtin.dnf:
        name: '*'
        state: latest
      become: true

    - name: Install Distribution GPG keys
      ansible.builtin.dnf:
        name: distribution-gpg-keys
        state: present
      become: true

    - name: Import RPM Fusion GPG keys
      ansible.builtin.rpm_key:
        key: '/usr/share/distribution-gpg-keys/rpmfusion/RPM-GPG-KEY-rpmfusion-{{ item }}-fedora-{{ ansible_facts.distribution_major_version }}'
        state: present
      with_items:
        - 'free'
        - 'nonfree'
      become: true

    - name: Install RPM Fusion packages
      ansible.builtin.dnf:
        name: 'https://mirrors.rpmfusion.org/{{ item }}/fedora/rpmfusion-{{ item }}-release-{{ ansible_facts.distribution_major_version }}.noarch.rpm'
      with_items:
        - 'free'
        - 'nonfree'
      become: true

    - name: Install basic packages
      ansible.builtin.dnf:
        name:
          - '@base-x'
          - '@hardware-support'
        state: present
      become: true

    - name: Install guest desktop agents
      ansible.builtin.dnf:
        name: '@guest-desktop-agents'
        state: present
      when: ansible_facts.virtualization_role == 'guest'
      become: true

    - name: Install desktop packages
      ansible.builtin.dnf:
        name:
          - lightdm-gtk
          - i3
          - alacritty
          - rofi
          - firefox
          - xrandr
        state: present
      become: true

    - name: Enable LightDM service
      ansible.builtin.systemd:
        name: lightdm
        enabled: true
      become: true

    - name: Add 1Password repository keys
      ansible.builtin.rpm_key:
        key: 'https://downloads.1password.com/linux/keys/1password.asc'
        state: present
      become: true

    - name: Add 1Password repository
      ansible.builtin.yum_repository:
        name: 1password
        description: 1Password Stable Channel
        baseurl: 'https://downloads.1password.com/linux/rpm/stable/$basearch'
        enabled: true
        gpgcheck: true
        repo_gpgcheck: true
        gpgkey: 'https://downloads.1password.com/linux/keys/1password.asc'
      become: true

    - name: Install 1Password
      ansible.builtin.dnf:
        name:
          - 1password
          - 1password-cli
        state: present
      become: true

    - name: Verify if has an account
      ansible.builtin.command: 'op account list'
      register: onepassword_account_list
      changed_when: false

    - name: Get 1Password credentials
      when: onepassword_account_list == ""
      block:
        - name: Get 1Password domain
          ansible.builtin.pause:
            prompt: Enter 1Password subdomain
          register: onepassword_subdomain

        - name: Get 1Password email
          ansible.builtin.pause:
            prompt: Enter 1Password email
          register: onepassword_email

        - name: Get 1Password secret key
          ansible.builtin.pause:
            prompt: Enter 1Password secret key
          register: onepassword_secret_key

        - name: Add 1Password account
          ansible.builtin.debug:
            var: lookup('community.general.onepassword',
                section='PC User',
                field='username',
                subdomain='{{ onepassword_subdomain }}',
                master_password='{{ onepassword_master_password }}',
                username='{{ onepassword_email }}',
                secret_key='{{ onepassword_secret_key }}')

    - name: Login 1Password account
      ansible.builtin.debug:
        var: lookup('community.general.onepassword',
            section='PC User',
            field='username',
            master_password='{{ onepassword_master_password }}')

    - name: Create user
      ansible.builtin.user:
        name: "{{ user.name }}"
        comment: "{{ user.full_name }}"
        groups: "wheel"
        append: true
        create_home: true
        state: present
      become: true

    - name: Copy Xresources file
      ansible.builtin.copy:
        src: .Xresources
        dest: '/home/{{ user.name }}/'
        owner: '{{ user.name }}'
        group: '{{ user.name }}'
        mode: '0644'
      become: true

    - name: Copy profile file
      ansible.builtin.copy:
        src: .profile
        dest: '/home/{{ user.name }}/'
        owner: '{{ user.name }}'
        group: '{{ user.name }}'
        mode: '0644'
      become: true

    - name: Generate git Config
      ansible.builtin.template:
        src: gitconfig.j2
        dest: '/home/{{ user.name }}/.gitconfig'
        owner: '{{ user.name }}'
        group: '{{ user.name }}'
        mode: '0644'
      become: true

    - name: Install Neovim
      ansible.builtin.dnf:
        name:
          - neovim
          - ripgrep
          - '@c-development'
        state: present
      become: true

    - name: Clone Neovim kickstart
      ansible.builtin.git:
        repo: 'https://github.com/nvim-lua/kickstart.nvim.git'
        dest: '/home/{{ user.name }}/.config/nvim'
        single_branch: true
        version: master
        clone: true
